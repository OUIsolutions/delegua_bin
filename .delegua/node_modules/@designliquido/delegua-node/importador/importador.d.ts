import { AvaliadorSintaticoInterface, LexadorInterface, SimboloInterface } from '@designliquido/delegua/interfaces';
import { RetornoImportador } from './retorno-importador';
import { ImportadorInterface } from '../interfaces';
import { Declaracao } from '@designliquido/delegua/declaracoes';
/**
 * O Importador é responsável por manusear arquivos. Coordena as fases de lexação, avaliação sintática,
 * cataloga informações do arquivo no núcleo da linguagem (através das referências `arquivosAbertos` e
 * `conteudoArquivosAbertos`) e aponta erros caso ocorram.
 *
 */
export declare class Importador implements ImportadorInterface<SimboloInterface, Declaracao> {
    diretorioBase: string;
    lexador: LexadorInterface<SimboloInterface>;
    avaliadorSintatico: AvaliadorSintaticoInterface<SimboloInterface, Declaracao>;
    arquivosAbertos: {
        [identificador: string]: string;
    };
    conteudoArquivosAbertos: {
        [identificador: string]: string[];
    };
    depuracao: boolean;
    constructor(lexador: LexadorInterface<SimboloInterface>, avaliadorSintatico: AvaliadorSintaticoInterface<SimboloInterface, Declaracao>, arquivosAbertos: {
        [identificador: string]: string;
    }, conteudoArquivosAbertos: {
        [identificador: string]: string[];
    }, depuracao: boolean);
    importar(caminhoRelativoArquivo: string, importacaoInicial?: boolean): RetornoImportador<SimboloInterface, Declaracao>;
}
//# sourceMappingURL=importador.d.ts.map