import { DeleguaFuncao } from '../estruturas';
import { VisitanteComumInterface } from '../interfaces';
declare const _default: {
    adicionar: (interpretador: VisitanteComumInterface, vetor: Array<any>, elemento: any) => Promise<any>;
    concatenar: (interpretador: VisitanteComumInterface, vetor: Array<any>, outroVetor: Array<any>) => Promise<any>;
    empilhar: (interpretador: VisitanteComumInterface, vetor: Array<any>, elemento: any) => Promise<any>;
    encaixar: (interpretador: VisitanteComumInterface, vetor: Array<any>, inicio: number, excluirQuantidade?: number, ...items: any[]) => Promise<any>;
    fatiar: (interpretador: VisitanteComumInterface, vetor: Array<any>, inicio: number, fim: number) => Promise<any>;
    filtrarPor: (interpretador: VisitanteComumInterface, vetor: Array<any>, funcao: DeleguaFuncao) => Promise<any>;
    inclui: (interpretador: VisitanteComumInterface, vetor: Array<any>, elemento: any) => Promise<any>;
    inverter: (interpretador: VisitanteComumInterface, vetor: Array<any>) => Promise<any>;
    juntar: (interpretador: VisitanteComumInterface, vetor: Array<any>, separador: string) => Promise<any>;
    mapear: (interpretador: VisitanteComumInterface, vetor: Array<any>, funcao: DeleguaFuncao) => Promise<any>;
    ordenar: (interpretador: VisitanteComumInterface, vetor: Array<any>, funcaoOrdenacao: DeleguaFuncao) => Promise<any>;
    remover: (interpretador: VisitanteComumInterface, vetor: Array<any>, elemento: any) => Promise<any>;
    removerPrimeiro: (interpretador: VisitanteComumInterface, vetor: Array<any>) => Promise<any>;
    removerUltimo: (interpretador: VisitanteComumInterface, vetor: Array<any>) => Promise<any>;
    somar: (interpretador: VisitanteComumInterface, vetor: Array<number>) => Promise<any>;
    tamanho: (interpretador: VisitanteComumInterface, vetor: Array<any>) => Promise<any>;
};
export default _default;
//# sourceMappingURL=primitivas-vetor.d.ts.map