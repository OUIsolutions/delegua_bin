"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const trigonometria_1 = require("../trigonometria");
describe('seno', () => {
    it('atira exceção se num for nulo', () => {
        // expect(() => seno(null)).toThrow();
        expect((0, trigonometria_1.seno)(null)).toEqual(0);
    });
    it('calcula o seno', () => {
        expect((0, trigonometria_1.seno)(90)).toBe(0.8939966636005579);
    });
});
describe('cosseno', () => {
    it('atira exceção se num for nulo', () => {
        // expect(() => cosseno(null)).toThrow();
        expect((0, trigonometria_1.cosseno)(null)).toEqual(1);
    });
    it('calcula o cosseno', () => {
        expect((0, trigonometria_1.cosseno)(90)).toBe(-0.4480736161291702);
    });
});
describe('graus', () => {
    it('atira exceção se num for nulo', () => {
        // expect(() => graus(null)).toThrow();
        expect((0, trigonometria_1.graus)(null)).toEqual(0);
    });
    /* it('calcula o ângulo', () => {
      expect(graus(pi)).toBe(180);
    }) */
});
describe('radiano', () => {
    it('atira exceção se num for nulo', () => {
        // expect(() => radiano(null)).toThrow();
        expect((0, trigonometria_1.radiano)(null)).toEqual(0);
    });
    it('calcula o radiano', () => {
        expect((0, trigonometria_1.radiano)(180)).toBe((0, trigonometria_1.pi)());
    });
});
describe('tangente', () => {
    it('atira exceção se num for nulo', () => {
        // expect(() => tan(null)).toThrow();
        expect((0, trigonometria_1.tangente)(null)).toEqual(0);
    });
    it('calcula a tangente', () => {
        expect((0, trigonometria_1.tangente)(180)).toEqual(1.3386902103511544);
    });
});
describe('arcoCosseno', () => {
    it.skip('atira exceção se num for nulo', () => {
        // expect(() => arcos(null)).toThrow();
        // console.log(arcoCosseno(null)) // 1.5707963267948966 ????
        expect((0, trigonometria_1.arcoCosseno)(null)).toEqual(0);
    });
    it('calcula o arco cosseno', () => {
        expect((0, trigonometria_1.arcoCosseno)(0)).toEqual(1.5707963267948966);
    });
});
describe('arcoSeno', () => {
    it('atira exceção se num for nulo', () => {
        // expect(() => arsen(null)).toThrow();
        expect((0, trigonometria_1.arcoSeno)(null)).toEqual(0);
    });
    it('calcula o arco seno', () => {
        expect((0, trigonometria_1.arcoSeno)(1)).toEqual(1.5707963267948966);
    });
});
describe('arcoTangente', () => {
    it('atira exceção se num for nulo', () => {
        // expect(() => artan(null)).toThrow();
        expect((0, trigonometria_1.arcoTangente)(null)).toEqual(0);
    });
    it('calcula o arco seno', () => {
        expect((0, trigonometria_1.arcoTangente)(1)).toEqual(0.7853981633974483);
    });
});
//# sourceMappingURL=trigonometria.test.js.map