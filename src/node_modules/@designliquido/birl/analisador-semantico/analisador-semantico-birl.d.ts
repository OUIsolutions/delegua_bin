import { Atribuir } from '@designliquido/delegua/construtos';
import { Declaracao, Expressao, Leia, Retorna, Var } from '@designliquido/delegua/declaracoes';
import { DiagnosticoAnalisadorSemantico } from '@designliquido/delegua/interfaces/erros';
import { RetornoAnalisadorSemantico } from '@designliquido/delegua/interfaces/retornos/retorno-analisador-semantico';
import { RetornoQuebra } from '@designliquido/delegua/quebras';
import { AnalisadorSemanticoBase } from '@designliquido/delegua/analisador-semantico/analisador-semantico-base';
import { PilhaVariaveis } from '@designliquido/delegua/analisador-semantico/pilha-variaveis';
interface VariavelHipoteticaBirlInterface {
    tipo: 'texto' | 'número' | 'longo' | 'vetor' | 'dicionário' | 'nulo' | 'lógico' | 'função' | 'símbolo' | 'objeto' | 'módulo';
    subtipo?: 'texto' | 'número' | 'longo' | 'lógico';
    imutavel: boolean;
}
export declare class AnalisadorSemanticoBirl extends AnalisadorSemanticoBase {
    pilhaVariaveis: PilhaVariaveis;
    variaveis: {
        [nomeVariavel: string]: VariavelHipoteticaBirlInterface;
    };
    atual: number;
    diagnosticos: DiagnosticoAnalisadorSemantico[];
    constructor();
    visitarExpressaoDeAtribuicao(expressao: Atribuir): Promise<void>;
    visitarDeclaracaoDeExpressao(declaracao: Expressao): any;
    visitarDeclaracaoVar(declaracao: Var): Promise<any>;
    visitarExpressaoLeia(expressao: Leia): Promise<void>;
    visitarExpressaoRetornar(declaracao: Retorna): Promise<RetornoQuebra>;
    analisar(declaracoes: Declaracao[]): RetornoAnalisadorSemantico;
}
export {};
//# sourceMappingURL=analisador-semantico-birl.d.ts.map