/**
 * Calcula a velocidade média.
 * @param {numero} intervaloDeslocamento Valor do intervalo de deslocamento.
 * @param {numero} intervaloTempo Valor do intervalo de tempo.
 * @returns A velocidade média.
 */
export declare function velocidadeMedia(intervaloDeslocamento: number, intervaloTempo: number): number;
/**
 * Calcula o espaço percorrido.
 * @param {number} s0 Valor de s0.
 * @param {number} s  Valor de s.
 * @returns O espaço percorrido.
 */
export declare function deltaS(s0: number, s: number): number;
/**
 * Calcula o tempo percorrido.
 * @param {number} t0 Valor de t0.
 * @param {number} t Valor de t.
 * @returns O tempo percorrido.
 */
export declare function deltaT(t0: number, t: number): number;
/**
 * Calcula a aceleração.
 * @param {numero} velocidadeFinal Valor da velocidade final.
 * @param {numero} velocidadeInicial Valor da velocidade inicial.
 * @param {numero} tempoFinal Valor do tempo final.
 * @param {numero} tempoInicial Valor do tempo inicial.
 * @returns
 */
export declare function aceleracao(velocidadeFinal: number, velocidadeInicial: number, tempoFinal: number, tempoInicial: number): number;
/**
 * Calcula a função horária da posição (M.R.U).
 * @param {numero} s0 Valor de s0.
 * @param {numero} v Valor de v.
 * @param {numero} t Valor de t.
 * @returns O resultado da função horária da posição.
 */
export declare function mrufh(s0: number, v: number, t: number): Array<string>;
/**
 * Calcula o Movimento Retilíneo Uniformemente Variado.
 * @param {number} s0 Valor de s0.
 * @param {number} s Valor de s.
 * @param {number} a Valor de a.
 * @returns O valor do M.R.U.V.
 */
export declare function mruv(s0: number, s: number, a: number): Array<any>;
