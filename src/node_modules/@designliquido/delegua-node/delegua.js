"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Delegua = void 0;
const sistemaArquivos = __importStar(require("fs"));
const caminho = __importStar(require("path"));
const nucleo_execucao_1 = require("./nucleo-execucao");
const nucleo_traducao_1 = require("./nucleo-traducao");
/**
 * O núcleo da linguagem.
 *
 * Responsável por avaliar a entrada fornecida, chamar o núcleo
 * correspondente à operação solicitada e observar a execução.
 */
class Delegua {
    constructor(funcaoDeRetorno, funcaoDeRetornoMesmaLinha) {
        this.funcaoDeRetorno = funcaoDeRetorno || console.log;
        // `process.stdout.write.bind(process.stdout)` é necessário por causa de 
        // https://stackoverflow.com/questions/28874665/node-js-cannot-read-property-defaultencoding-of-undefined
        this.funcaoDeRetornoMesmaLinha = funcaoDeRetornoMesmaLinha || process.stdout.write.bind(process.stdout);
    }
    versao() {
        try {
            const manifesto = caminho.resolve(process.cwd(), 'package.json');
            return JSON.parse(sistemaArquivos.readFileSync(manifesto, { encoding: 'utf8' })).version || '0.26';
        }
        catch (error) {
            return '0.32 (desenvolvimento)';
        }
    }
    async executarCodigoComoArgumento(codigo, dialeto = 'delegua', performance = false) {
        const nucleoExecucao = new nucleo_execucao_1.NucleoExecucao(this.versao(), this.funcaoDeRetorno, this.funcaoDeRetornoMesmaLinha);
        nucleoExecucao.configurarDialeto(dialeto, performance);
        return await nucleoExecucao.executarCodigoComoArgumento(codigo);
    }
    async executarCodigoPorArquivo(caminhoRelativoArquivo, dialeto = 'delegua', performance = false) {
        const nucleoExecucao = new nucleo_execucao_1.NucleoExecucao(this.versao(), this.funcaoDeRetorno, this.funcaoDeRetornoMesmaLinha);
        nucleoExecucao.configurarDialeto(dialeto, performance);
        return await nucleoExecucao.carregarEExecutarArquivo(caminhoRelativoArquivo);
    }
    async iniciarLair(dialeto = 'delegua') {
        const nucleoExecucao = new nucleo_execucao_1.NucleoExecucao(this.versao(), this.funcaoDeRetorno, this.funcaoDeRetornoMesmaLinha);
        nucleoExecucao.configurarDialeto(dialeto, false);
        return await nucleoExecucao.iniciarLairDelegua();
    }
    traduzirArquivo(caminhoRelativoArquivo, comandoTraducao, gerarArquivoSaida = false) {
        const nucleoTraducao = new nucleo_traducao_1.NucleoTraducao(this.funcaoDeRetorno, this.funcaoDeRetornoMesmaLinha);
        nucleoTraducao.iniciarTradutor(comandoTraducao);
        nucleoTraducao.traduzirArquivo(caminhoRelativoArquivo, gerarArquivoSaida);
    }
}
exports.Delegua = Delegua;
//# sourceMappingURL=delegua.js.map