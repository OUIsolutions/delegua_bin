/// <reference types="node" />
import * as net from 'net';
import { InterpretadorComDepuracaoInterface } from '@designliquido/delegua/interfaces';
import { NucleoExecucaoInterface } from '../interfaces/nucleo-execucao-interface';
/**
 * Esta foi a primeira implementacão do mecanismo de depuração, usando comunicação por _sockets_.
 * Inicialmente uma integração foi implementada na extensão do VSCode, mas o protocolo de
 * comunicação nunca foi exatamente maturado, em favor de uma implementação na extensão
 * usando a linguagem diretamente.
 *
 * Mecanismo poderá ser maturado num futuro próximo. Para mais detalhes, ler `README.md`.
 */
export declare class ServidorDepuracao {
    instanciaNucleoExecucao: NucleoExecucaoInterface;
    servidor: net.Server;
    conexoes: {
        [chave: number]: any;
    };
    contadorConexoes: number;
    interpretador: InterpretadorComDepuracaoInterface;
    constructor(instanciaNucleoExecucao: NucleoExecucaoInterface);
    validarPontoParada: (caminhoArquivo: string, linha: number, conexao: net.Socket) => any;
    comandoAdentrarEscopo: (conexao: net.Socket) => Promise<any>;
    comandoAdicionarPontoParada: (comando: string[], conexao: net.Socket) => any;
    comandoAvaliar: (comando: string[], conexao: net.Socket) => Promise<any>;
    comandoAvaliarVariavel: (comando: string[], conexao: net.Socket) => Promise<any>;
    comandoContinuar: (conexao: net.Socket) => Promise<any>;
    comandoPilhaExecucao: (conexao: net.Socket) => any;
    comandoPontosParada: (conexao: net.Socket) => any;
    comandoProximo: (conexao: net.Socket) => Promise<any>;
    comandoRemoverPontoParada: (comando: string[], conexao: net.Socket) => any;
    comandoSairEscopo: (conexao: net.Socket) => Promise<any>;
    comandoVariaveis: (conexao: net.Socket) => any;
    /**
     * Função que descreve como conexão com clientes de depuração deve ser operada.
     * @param conexao Instância de conexão, tipo net.Socket.
     */
    operarConexao: (conexao: net.Socket) => void;
    iniciarServidorDepuracao(): net.AddressInfo;
    escreverSaidaParaTodosClientes(mensagem: string): void;
    finalizarServidorDepuracao(): void;
}
//# sourceMappingURL=servidor-depuracao.d.ts.map